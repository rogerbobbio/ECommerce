@model ECommerce.Models.NewOrderView

@{
    ViewBag.Title = "New Order";
}

<h2>New Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (User.IsInRole("User"))
        {
            @Html.HiddenFor(model => model.CompanyId)
        }

        <div class="row">
            <div class="col-md-6">
                @if (User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyId, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group date" id="datepicker" style="width: 280px">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">                        
                        @Html.EditorFor(model => model.Remarks, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Remarks, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save Order" class="btn btn-primary" />                        
                        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<h4>Details</h4>
<hr />
    <div>
        @Html.ActionLink("Add Product", "AddProduct", new {  }, new { @class = "btn btn-warning" })
    </div>
<hr />
@if (Model.Details.Count == 0)
{
    <h5>No details added yet</h5>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Product.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].TaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Value)
            </th>            
            <th></th>
        </tr>

        @foreach (var item in Model.Details)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.Product.Image))
                    {
                         <img src="@Url.Content(item.Product.Image)" alt="Image" style="width: 100px; height: 150px; max-width: 100%; height: auto;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>                
                <td align="right">
                    @Html.DisplayFor(modelItem => item.TaxRate)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Value)
                </td>                
                <td>
                    @Html.ActionLink("Delete", "DeleteProducts", new {id = item.ProductId}, new {@class = "btn btn-danger", onclick = "return confirm('Are you sure to delete this record?')"})
                </td>
            </tr>
        }
        <tr>
            <td colspan="4" align="right">
                <strong>Total</strong>
            </td>
            <td align="right">
                <strong>@Html.DisplayFor(modelItem => Model.TotalQuantity)</strong>                
            </td>
            <td align="right">
                <strong>@Html.DisplayFor(modelItem => Model.TotalValue)</strong>                
            </td>
        </tr>
    </table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function() {
            $('#datepicker').datetimepicker({ format: 'YYYY/MM/DD'});
        });

        $("#CompanyId").change(function() {
            $("#ProjectId").empty();
            $("#ProjectId").append('<option value="0">[Select a Project...]</option>');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetProjects")',
                dataType: 'json',
                data: { companyId: $("#CompanyId").val() },
                success: function(data) {
                    $.each(data,
                        function(i, data) {
                            $("#ProjectId").append('<option value="' + data.ProjectId + '">' + data.Name + '</option>');
                        });
                },
                error: function(ex) {
                    alert('Faile to retrive projects.' + ex);
                }
            });
            return false;
        });
    </script>
}
