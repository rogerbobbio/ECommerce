@model ECommerce.Models.EditBudgetDetailView

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BudgetDetailTmpId)
        <div class="form-group">
            @Html.LabelFor(model => model.Category, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">            
                @Html.DisplayFor(model => model.Category)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Subcategory, "Subcategory", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Subcategory)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Description)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Metered, "Metered", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Metered, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.Metered, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, "Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-primary" />
                @Html.ActionLink("Regresar al presupuesto", "Create", new { }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
