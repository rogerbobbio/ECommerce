@model ECommerce.Models.Company

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Companies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Company</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CompanyId)
    @Html.HiddenFor(model => model.Logo)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ruc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ruc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ruc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LogoFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="file-input-new">
                <div class="input-group" style="width:280px">
                    <div tabindex="500" class="form-control file-caption">
                        <div class="file-caption-name" id="NombreArchivo">
                        </div>
                    </div>
                    <div class="input-group-btn" style="height:auto">
                        <div tabindex="500" class="btn btn-primary btn-file">
                            <i class="glyphicon glyphicon-folder-open"></i>
                            File Search...
                            @Html.TextBoxFor(modelo => modelo.LogoFile, new { type = "file", id = "files" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.State)
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#DepartmentId").change(function() {
                $("#CityId").empty();
                $("#CityId").append('<option value="0">[Select a city...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCities")',
                    dataType: 'json',
                    data: { departmentId: $("#DepartmentId").val() },
                    success: function(data) {
                        $.each(data,
                            function(i, data) {
                                $("#CityId").append('<option value="' + data.CityId + '">' + data.Name + '</option>');
                            });
                    },
                    error: function(ex) {
                        alert('Faile to retrive cities.' + ex);
                    }
                });
                return false;
            });
        });
    </script>
}
